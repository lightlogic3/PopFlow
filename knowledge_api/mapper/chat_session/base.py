from datetime import datetime
from typing import Optional, Literal
from sqlmodel import SQLModel, Field, JSON


class SessionBase(SQLModel):
    """conversation-based model"""
    user_id: str = Field(..., max_length=64, description="User ID or identifier")
    role_id: str = Field(..., max_length=64, description="Role ID")
    type_session: str = Field(..., max_length=8, description="session type") # User user session, test test session, admin session
    session_name: Optional[str] = Field(None, max_length=128, description="Session name, which can be automatically generated by the system or customized by the user")
    session_summary: Optional[str] = Field(None, description="Session summary or introduction")
    model_name: Optional[str] = Field(None, max_length=64, description="Main model names used")
    session_status: str = Field(default="active", description="conversation state")
    first_message_time: Optional[datetime] = Field(None, description="first message time")
    last_message_time: Optional[datetime] = Field(None, description="Last message time")
    message_count: int = Field(default=0, description="total number of messages")
    total_tokens: int = Field(default=0, description="The number of tokens consumed cumulatively by the session")


class Session(SessionBase, table=True):
    """session database model"""
    __tablename__ = "llm_chat_sessions"

    session_id: str = Field(primary_key=True, max_length=64, description="Session unique device identifier")
    created_at: datetime = Field(default_factory=datetime.now, description="creation time")
    updated_at: datetime = Field(
        default_factory=datetime.now,
        sa_column_kwargs={"onupdate": datetime.now},
        description="update time"
    )


class SessionCreate(SessionBase):
    """Create a session request model"""
    role_id: str = Field("", max_length=64, description="Role ID")
    type_session: str = Field(..., max_length=8, description="session type") # User user session, test test session, admin session


class SessionUpdate(SQLModel):
    """Update session request model"""
    session_name: Optional[str] = Field(None, max_length=128)
    session_summary: Optional[str] = None
    model_name: Optional[str] = Field(None, max_length=64)
    session_status: Optional[str] = Field(None)
    first_message_time: Optional[datetime] = None
    last_message_time: Optional[datetime] = None
    message_count: Optional[int] = None
    total_tokens: Optional[int] = None


class SessionResponse(SessionBase):
    """conversation response model"""
    session_id: str
    created_at: datetime
    updated_at: datetime 